-car = Car.new(rate: 0.25)
-sharer = Sharer.new(name: "Francine", number: "#12345")

-if user_signed_in?
  -car = Car.first || car
  -car.lockbox_information = "The key is in a lockbox whose combination is XXXX."

  -if current_user.sharer
    -sharer = current_user.sharer

-car.odometer_reading = 19105
-car.rate = 0.25 unless car.rate?

.section
  .conversation
    .outgoing join
    .incoming Hello there! To join the car share, please reply with your name.
    .outgoing Francine
    .incoming Nice to meet you, Francine. Please wait while I check in.
    .incoming=render_response(Responses::Approve)

  .conversation
    .outgoing status
    .incoming=render_response(Responses::StatusAvailable, car: car)
    .outgoing borrow
    .incoming=render_response(Responses::Borrow, car: car)

  =image_tag "safe.svg"
  =image_tag "key.svg"

  .conversation
    .outgoing #{car.odometer_reading}
    .incoming=render_response(Responses::OdometerReportBorrowing, car: car)

  =image_tag "wheel.svg"
  =image_tag "gas.svg"

  -gas = 12.76

  .conversation
    .outgoing gas #{gas}
    -sharer.pending_payments += gas
    .incoming=render_response(Responses::Gas, sharer: sharer, cost: gas)

  -distance = 84

  .conversation
    .outgoing return
    .incoming=render_response(Responses::Return, car: car)

  -car.odometer_reading += distance
  -sharer.balance += car.rate*distance
  -borrowing = OpenStruct.new(span: distance)

  .conversation
    .outgoing=car.odometer_reading
    .incoming=render_response(Responses::OdometerReportReturning, car: car, borrowing: borrowing, sharer: sharer)

  =image_tag "pay.svg"

  -payment = 17.25
  .conversation
    .outgoing pay #{payment}
    -sharer.pending_payments += payment
    .incoming=render_response(Responses::Pay, car: car, amount: payment, sharer: sharer)

    -sharer.balance -= payment
    -sharer.pending_payments -= payment
    .incoming=render_response(Responses::CollectSharerNotification, sharer: sharer, amount: payment)

  =image_tag "calendar.svg"

  -booking_string = "tomorrow from 2pm to 10pm"
  -booking = Parsers::Booking.new(booking_string).parse

  .conversation
    .outgoing book #{booking_string}
    .incoming=render_response(Responses::Book, booking: booking)
    .outgoing confirm
    .incoming=render_response(Responses::Confirm, booking: booking, car: car)

    .outgoing bookings
    .incoming.pre=render_response(Responses::Bookings, bookings: [booking]).gsub("\n", "&#x00A;").html_safe

-if user_signed_in? && current_user.admin?
  %h2 Admin commands
  %h3 Who
  .conversation
    .outgoing who
    .incoming.pre=Responses::Who.new(sharers: Sharer.all + [Sharer.new(name: "Ex.", number: "#123", pending_payments: 5.5, balance: 3.25)]).body.gsub("\n", "&#x000A;").html_safe
  %h3 Approve
  -prospective_approvee = Sharer.new(name: "Francine", number: "#12345")
  .conversation
    .incoming=Responses::ApproveAdminRequest.new(sharer: prospective_approvee).body
    .outgoing approve #{prospective_approvee.number}
    .incoming=Responses::ApproveAdmin.new(approvee: prospective_approvee).body
  %h3 Reject
  -sharer_to_reject= Sharer.new(name: "Pascal", number: "#67890")
  .conversation
    .incoming=Responses::ApproveAdminRequest.new(sharer: sharer_to_reject).body
    .outgoing reject #{sharer_to_reject.number}
    .incoming=Responses::Reject.new(rejectee: sharer_to_reject).body
  %h3 Collect
  -sharer = prospective_approvee
  -sharer.balance = 9.75
  -amount = 7.50
  .conversation
    .incoming=Responses::PayAdminNotification.new(sharer: sharer, amount: amount).body
    .outgoing collect #{number_to_currency amount}
    .incoming=Responses::Collect.new(amount: amount, collectee: sharer).body

%h2 Credits

%p To be moved elsewhere.

%ul
  %li Safe designed by <a href="http://www.thenounproject.com/krivoydesigner">Sergey Krivoy</a> from the <a href="http://www.thenounproject.com">Noun Project</a>
  %li Key designed by <a href="http://www.thenounproject.com/Luis">Luis Prado</a> from the <a href="http://www.thenounproject.com">Noun Project</a>
  %li Steering Wheel designed by <a href="http://www.thenounproject.com/francescofraioli">Francesco Fraioli</a> from the <a href="http://www.thenounproject.com">Noun Project</a>
  %li Gas designed by <a href="http://www.thenounproject.com/jontesta">Jon Testa</a> from the <a href="http://www.thenounproject.com">Noun Project</a>
